"disable indent guides
let g:indent_guides_enable_on_vim_startup=0
let g:syntastic_python_checkers=['flake8']
let g:syntastic_php_checkers=['php', 'phpcs']
let g:syntastic_javascript_checkers=['jshint']
let g:syntastic_php_phpcs_args="--standard=Zend --config-set report_width 120"
let g:sessiondir= $HOME."/.vim/sessions"
let g:sessionfile= g:sessiondir."/autosave_session.vim"
let g:spf13_no_autochdir = 1 "do not change vim directory to current file
let g:spf13_no_views = 1
"let g:airline_theme="molokai"
let g:airline#extensions#tabline#enabled = 1

let g:snips_author = 'Lionel Martin'
let g:snips_email = 'martin.lionel01@free.fr'
let g:snips_github = 'https://github.com/LionelMartin/'

set noswapfile

set relativenumber
set number

let php_sql_query = 0
let php_html_in_strings = 0
let php_folding = 0

" start out files with all folds opened
let g:DisableAutoPHPFolding = 1

set guifont=Droid\ Sans\ Mono\ 10
colorscheme molokai

" save session on exit and restore it on load
function! RestoreSession()
    if argc() == 0 "vim called without arguments
        if filereadable(g:sessionfile)
            execute 'source '.g:sessionfile
        endif
    endif
endfunction

function! SaveSession()
    if argc() == 0 "vim called without arguments
        if !isdirectory(g:sessiondir)
            call mkdir(g:sessiondir, "p")
        endif
        execute "mksession! ".g:sessionfile
    endif
endfunction

"autocmd VimEnter * nested call RestoreSession()
autocmd VimLeavePre * call SaveSession()

"gestion lignes trop longues
hi OverLength ctermbg=darkred ctermfg=white guibg=darkred
match OverLength /\%120v.*/

"please no barbarian autocomplete, i'm going crazy
au! CursorMovedI,InsertLeave * if pumvisible() == 0|silent! pclose|endif

" When pressing <leader>cd switch to the directory of the open buffer
map <leader>cd :cd %:p:h<cr>
map :Shortcut :vsp $HOME."/.vim/shortcuts"<cr>

" move easily through buffers
map <C-h> :bp<cr>
map <C-l> :bn<cr>

UnBundle 'honza/vim-snippets'
UnBundle 'myusuf3/numbers.vim'

let NERDTreeShowHidden=0
let NERDTreeQuitOnOpen=0

map <F3> :NERDTreeToggle<CR>
map <F4> :TagbarToggle<CR>

"if has('gui_running')
    "set guioptions+=T
"endif

" Use work version of vimrc if available {
    if filereadable(expand("~/.vimrc.local.work"))
        source ~/.vimrc.local.work
    endif
" }
